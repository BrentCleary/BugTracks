@model IEnumerable<BugTracks.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using BugTracks.Services.Interfaces
@using BugTracks.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService


@{
    ViewData["Title"] = "AllTickets";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<h1>AllTickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@foreach (var item in Model)
{
    <div class="card row bg-light p-3 mt-3 rounded-2">
        <div class="row card-img-top bg-secondary bg-opacity-50 rounded-2 m-2 p-2 " style="height: 50px">
            <h4> @item.Title</h4>    
        </div>
        @* Project Name *@
        <div class="row">
            <div class="col-2 card-img-top">
                <div>Project</div>
                <div>@item.Project.Name</div>
            </div>
        </div>
        <div class="row">
            @* Description *@
            <div class="row">
                <div class="col-2 card-img-top">
                    <div></div>
                    <div>@item.Description</div>
                </div>
            </div>
            @* Created/Updated Times *@
            <div class="col-2">
                <div class="row bg-light d-flex flex-column">
                    <div class="row rounded-2 bg-dark bg-opacity-10 m-2">
                        <h5 class="text-bold">Start Date</h5>
                        <h6>@item.Created.ToString("MM/dd/yyyy")</h6>
                    </div>
                    <div class="row rounded-2 bg-dark bg-opacity-10 m-2">
                        <h5 class="text-bold">End Date</h5>
                        <h6>@item.Updated</h6>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                    @if (User.IsInRole(nameof(Roles.Admin)) || item.DeveloperUserId == btUser.Id || item.OwnerUserId == btUser.Id || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId.Value))
                {
                        <span>| </span><a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                }
                
                @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId.Value))
                {
                    @if (item.Archived == true)
                    {
                        <span>| </span><a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                    else
                    {
                        <span>| </span><a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
